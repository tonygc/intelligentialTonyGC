[{"C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\index.js":"1","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\menu_nav.js":"2","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaLibros\\index.js":"3","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaLibros\\presentational.js":"4","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\mantenimientoUsuario\\index.js":"5","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\mantenimientoUsuario\\presentational.js":"6","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaUsuarios\\index.js":"7","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaUsuarios\\presentational.js":"8","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\customHooks\\requestAPI\\index.js":"9","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\mantenimientoLibro\\index.js":"10","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\mantenimientoLibro\\presentational.js":"11","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\login\\index.js":"12","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\login\\presentational.js":"13","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\context\\index.js":"14","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\context\\actions.js":"15","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\context\\reducer.js":"16","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\context\\context.js":"17","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\utilities\\index.js":"18","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaSolicitudesBibliotecario\\index.js":"19","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaSolicitudesBibliotecario\\presentational.js":"20","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaSolicitudesLector\\index.js":"21","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaSolicitudesLector\\presentational.js":"22","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\customHooks\\customComponents\\index.js":"23"},{"size":600,"mtime":1618252006289,"results":"24","hashOfConfig":"25"},{"size":7835,"mtime":1618339948155,"results":"26","hashOfConfig":"25"},{"size":3475,"mtime":1618285027222,"results":"27","hashOfConfig":"25"},{"size":7348,"mtime":1618340170810,"results":"28","hashOfConfig":"25"},{"size":3271,"mtime":1618333408258,"results":"29","hashOfConfig":"25"},{"size":4553,"mtime":1618332826344,"results":"30","hashOfConfig":"25"},{"size":1340,"mtime":1618176904563,"results":"31","hashOfConfig":"25"},{"size":4499,"mtime":1618340225394,"results":"32","hashOfConfig":"25"},{"size":1061,"mtime":1618177280121,"results":"33","hashOfConfig":"25"},{"size":2554,"mtime":1618176325512,"results":"34","hashOfConfig":"25"},{"size":4814,"mtime":1618275579419,"results":"35","hashOfConfig":"25"},{"size":1667,"mtime":1618339792745,"results":"36","hashOfConfig":"25"},{"size":1998,"mtime":1618336093519,"results":"37","hashOfConfig":"25"},{"size":199,"mtime":1618156548499,"results":"38","hashOfConfig":"25"},{"size":1063,"mtime":1618183687126,"results":"39","hashOfConfig":"25"},{"size":1200,"mtime":1618183910341,"results":"40","hashOfConfig":"25"},{"size":1032,"mtime":1618154821315,"results":"41","hashOfConfig":"25"},{"size":147,"mtime":1618202282822,"results":"42","hashOfConfig":"25"},{"size":2650,"mtime":1618338434144,"results":"43","hashOfConfig":"25"},{"size":7010,"mtime":1618331801649,"results":"44","hashOfConfig":"25"},{"size":833,"mtime":1618235831934,"results":"45","hashOfConfig":"25"},{"size":4304,"mtime":1618331895783,"results":"46","hashOfConfig":"25"},{"size":4467,"mtime":1618328211890,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"17dvcyu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"50"},"C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\index.js",[],["109","110"],"C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\menu_nav.js",["111","112","113","114"],"import {BrowserRouter as Router, Route, Link, Redirect} from 'react-router-dom';\r\nimport {Container as BrowserBooks} from './listaLibros';\r\nimport {Container as LibrarianRequests } from './listaSolicitudesBibliotecario';\r\nimport {Container as ReaderRequests } from './listaSolicitudesLector';\r\nimport {Container as FormUser} from './mantenimientoUsuario';\r\nimport {Container as BrowserUsers} from './listaUsuarios';\r\nimport {Container as FormBook} from './mantenimientoLibro';\r\nimport {Container as Login} from './login';\r\nimport { useAuthDispatch, useAuthState, logout } from './context'\r\nimport { useState } from 'react';\r\nimport { Grid, Box, Typography, Menu as MenuUI, MenuItem, Button,ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport ReorderIcon from '@material-ui/icons/Reorder';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport { useEffect } from 'react'\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n      border: '1px solid #d3d4d5',\r\n    },\r\n  })((props) => (\r\n    <MenuUI\r\n      elevation={0}\r\n      getContentAnchorEl={null}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'center',\r\n      }}\r\n      {...props}\r\n    />\r\n  ));\r\n  const StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n      '&:focus': {\r\n        backgroundColor: theme.palette.primary.main,\r\n        '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n          color: theme.palette.common.white,\r\n        },\r\n      },\r\n    }\r\n  }))(MenuItem);\r\n\r\nexport default function Menu(props){\r\n    const dispatch = useAuthDispatch() // read dispatch method from context\r\n    const user = useAuthState() //read user details from context\r\n    const [singout, setSingOut] = useState(false);\r\n \r\n    const handleLogout = () => {\r\n        logout(dispatch) //call the logout action\r\n        setSingOut(true);\r\n        \r\n        //props.history.push('/usuario/login') //navigate to logout page on logout\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n    return(\r\n        <div>\r\n            <Typography variant=\"h2\" component=\"h2\" align=\"left\">\r\n                Virtual Library\r\n            </Typography>\r\n            <Router>\r\n            {(\r\n                user.userDetails &&\r\n                <Box display=\"flex\" flexDirection=\"row-reverse\">\r\n                  <Button\r\n                  size=\"large\"\r\n                  startIcon={<FaceIcon />}\r\n                  endIcon={<ReorderIcon />}\r\n        aria-controls=\"customized-menu\"\r\n        aria-haspopup=\"true\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n      >\r\n        Bienvenido {user.userDetails.first_name} {user.userDetails.last_name}\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {\r\n                        user.userDetails.profile_id===1 &&\r\n                        <StyledMenuItem\r\n                        component={Link}\r\n                        to=\"/usuario/lista\"\r\n                        >\r\n                        <ListItemIcon>\r\n                        <PeopleAltIcon fontSize=\"small\" />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Usuarios\" />\r\n                                  </StyledMenuItem>\r\n                        }\r\n          {(user.userDetails.profile_id===1 || user.userDetails.profile_id===3) &&\r\n          <StyledMenuItem\r\n          component={Link}\r\n          to=\"/libro/lista\"\r\n          >\r\n          <ListItemIcon>\r\n          <MenuBookIcon fontSize=\"small\" />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Libros\" />\r\n                    </StyledMenuItem>\r\n                    }\r\n        {\r\n                        (user.userDetails.profile_id===2\r\n                            ) &&\r\n                            <StyledMenuItem\r\n                            component={Link}\r\n                        to=\"/solicitudesBibliotecario\"\r\n                            >\r\n          <ListItemIcon>\r\n            <ViewListIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Solicitudes de Préstamo\" />\r\n        </StyledMenuItem>\r\n                    }\r\n                    {\r\n                        (user.userDetails.profile_id===3\r\n                            ) &&\r\n                            <StyledMenuItem\r\n                            component={Link}\r\n                        to=\"/solicitudesLector\"\r\n                            >\r\n          <ListItemIcon>\r\n            <ViewListIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Mis Solicitudes\" />\r\n        </StyledMenuItem>\r\n                    }\r\n        <StyledMenuItem onClick={handleLogout}>\r\n          <ListItemIcon>\r\n            <ExitToAppIcon fontSize=\"small\" />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Cerrar sesión\" />\r\n        </StyledMenuItem>\r\n      </StyledMenu>\r\n                </Box>\r\n                \r\n            )}\r\n                <Route path=\"/libro/lista\" render={\r\n                    props=> !user.userDetails ? <Redirect to=\"/usuario/login\" /> \r\n                    : <BrowserBooks {...props} />\r\n                }\r\n                />\r\n                <Route path=\"/solicitudesBibliotecario\" exact render={\r\n                    props=> !user.userDetails ? <Redirect to=\"/usuario/login\" /> \r\n                    : ( user.userDetails.profile_id!==2 ? <Redirect to=\"/usuario/login\" /> : <LibrarianRequests {...props} />)\r\n                } />\r\n                <Route path=\"/solicitudesLector\" exact render={\r\n                    props=> !user.userDetails ? <Redirect to=\"/usuario/login\" /> \r\n                    : ( user.userDetails.profile_id!==3 ? <Redirect to=\"/usuario/login\" /> : <ReaderRequests {...props} />)\r\n                } />\r\n                <Route path=\"/usuario\" exact render={\r\n                    props=> !user.userDetails ? <Redirect to=\"/usuario/login\" /> \r\n                    : \r\n                    (user.userDetails.profile_id === 1 ?\r\n                    <FormUser {...props} /> :\r\n                    <FormUser {...props } location={{...props, state:user.userDetails}} />)\r\n                } />\r\n                <Route path=\"/usuario/lista\" exact render={\r\n                    props=> !user.userDetails ? <Redirect to=\"/usuario/login\" /> \r\n                    : (user.userDetails.profile_id === 1 ?\r\n                      <BrowserUsers {...props} />\r\n                    : <Redirect to=\"/usuario/login\" />)\r\n                } />\r\n                <Route path=\"/libro\" exact render={\r\n                    props=> !user.userDetails ? <Redirect to=\"/usuario/login\" /> \r\n                    : <FormBook {...props} />\r\n                } />\r\n                <Route path=\"/usuario/login\" exact render={props=><Login {...props} location={{closeMenu:()=>handleClose}} />}/>\r\n                <Route exact path=\"/\">\r\n                    <Redirect to=\"/usuario/Login\" />\r\n                </Route>\r\n                {( singout && \r\n                    <Redirect to=\"/usuario/login\" />\r\n                )}\r\n            </Router>\r\n        </div>\r\n    )\r\n}","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaLibros\\index.js",["115"],"import { useEffect, useState } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { Presentational as BrowseBooks } from './presentational'\r\nimport { Container as MyRequestsComponent } from '../listaSolicitudesLector'\r\nimport { useFetch } from '../customHooks/requestAPI';\r\nimport { useAuthState } from '../context';\r\nexport const Container=(props)=>{\r\n    // const [rows, setRows] = useState([\r\n    //     {title: \"Cáscara de nuez\", author: \"Ian McEwan\", editorial: \"Anagrama\", pages: 350, year:2000}\r\n    //     ,{title: \"Nosotros en la noche\", author: \"Kent Haruf\", editorial: \"Literatura Random House\", pages: 350, year:2000}\r\n    //     ,{title: \"Los milagros prohibidos\", author: \"Alexis Ravelo\", editorial: \"Siruela\",pages: 350, year:2000}\r\n    //     ,{title: \"Orthodoxia\", author: \"Ulises Bértolo\", editorial: \"Ediciones Carena\", pages: 350, year:2000}\r\n    //     ,{title: \"El cuento de la criada\", author: \"Margaret Atwood\", editorial: \"Salamandra\", pages: 350, year:2000}\r\n    // ]);\r\n    const [ itemBook, setItemBook ] = useState({});\r\n    const [url, setUrl]=useState(\"http://localhost:3000/book/getAll\");\r\n    const [addBook, setAddBook]=useState(false);\r\n    const [myRequests, setMyRequests]=useState(false);\r\n    const { userDetails } = useAuthState();\r\n    const [requestOptions, setRequestOptions]=useState(\r\n        { \r\n            method:\"GET\", \r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    );\r\n    const [ response, loading, hasError] = useFetch(url, setUrl, requestOptions);\r\n    \r\n    const clickAddBook=()=>{\r\n        setAddBook(true);\r\n    };\r\n    const clickEditBook=(item)=>{\r\n        //console.log(item);\r\n        setItemBook(item);\r\n        clickAddBook();\r\n    }\r\n    const clickRequestBook=(item)=>{\r\n        let data={id_user:userDetails.id,id_book:item.id};\r\n        console.log(\"data book request\", data);\r\n        setRequestOptions(\r\n            { ...requestOptions,\r\n                method:\"POST\", \r\n                body:JSON.stringify(data)\r\n            }\r\n        );\r\n        setUrl(\"http://localhost:3000/bookRequest/add\");\r\n    };\r\n    useEffect(()=>{\r\n        if(!response.data){\r\n            if(response.success)\r\n            {\r\n                setMyRequests(true);\r\n                //     setRequestOptions(\r\n            //     { \r\n            //         headers: {\r\n            //             'Accept': 'application/json, text/plain, */*',\r\n            //             'Content-Type': 'application/json'\r\n            //         },\r\n            //         method:\"GET\", \r\n            //         body:null\r\n            //     }\r\n            // );\r\n            // setUrl(\"http://localhost:3000/book/getAll\");\r\n            }\r\n        }\r\n    },[response]);\r\n    if (addBook) {\r\n        return <Redirect to={{\r\n            pathname:\"/libro\",\r\n            state: itemBook\r\n        }} push={true} />;\r\n    }\r\n    return(\r\n        <div>\r\n        {myRequests===true &&\r\n            props.history.push('/solicitudesLector')\r\n        }\r\n        {(response &&\r\n            <BrowseBooks userDetails={userDetails} \r\n            rows={response.data} \r\n            clickAddBook={clickAddBook} \r\n            clickEditBook={clickEditBook}\r\n            clickRequestBook={clickRequestBook}\r\n            loading={loading}\r\n            hasError={hasError}\r\n            />\r\n        )}\r\n        </div>\r\n    )\r\n}","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaLibros\\presentational.js",["116","117","118","119"],"import React, {useState} from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid,IconButton, Button, Collapse, Box, Backdrop, CircularProgress, InputLabel } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\r\nimport { DarkTableCell, DarkTableRow, gridMessageError, BackdropLoading, ElementsPaginateTable }  from '../customHooks/customComponents';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ButtonAdd } from '../customHooks/customComponents'\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nexport const Presentational=(\r\n            {\r\n                rows, \r\n                setRows, \r\n                clickAddBook, \r\n                clickEditBook, \r\n                clickRequestBook,\r\n                userDetails, \r\n                loading,\r\n                hasError})=>{\r\n        \r\nconst styles = makeStyles((theme)=>({\r\n    root: {\r\n        '& > *': {\r\n        borderBottom: 'unset',\r\n        },\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#000',\r\n      },\r\n    })\r\n    );\r\nconst classes=styles();\r\nfunction Row(props) {\r\n    const { row } = props;\r\n    const [open, setOpen] = useState(false);\r\n    \r\n    return (\r\n        <React.Fragment>\r\n        <DarkTableRow className={classes.root}>\r\n            <DarkTableCell>\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)} title=\"Más información del libro...\">\r\n                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n            </DarkTableCell>\r\n            <DarkTableCell component=\"th\" scope=\"row\">{row.title}</DarkTableCell>\r\n            <DarkTableCell align=\"right\">{row.author}</DarkTableCell>\r\n            <DarkTableCell align=\"right\">{row.editorial}</DarkTableCell>\r\n            <DarkTableCell>\r\n                {\r\n                    {\r\n                    1: <Button variant=\"contained\" title=\"Editar libro...\" size=\"small\" onClick={()=>clickEditBook(row)}>\r\n                            <EditIcon />\r\n                        </Button>,\r\n                    2: \"\",\r\n                    3: <Button variant=\"contained\"  title=\"Solicitar préstamo...\" size=\"small\" onClick={()=>clickRequestBook(row)}>\r\n                        <MenuBookIcon />\r\n                    </Button>,\r\n                    }[userDetails.profile_id]\r\n                }\r\n            </DarkTableCell>\r\n        </DarkTableRow>\r\n        <DarkTableRow>\r\n            <DarkTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <Box margin={1}>\r\n                \r\n                <Typography variant=\"h5\">\r\n                Mas información\r\n                </Typography>\r\n                <Grid container>\r\n                    <Grid container item xs={7}></Grid>\r\n                    <Grid container item xs={3}>\r\n                        <Typography variant=\"h6\" >\r\n                            Número de Páginas\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item xs={2}>\r\n                        <Typography variant=\"subtitle1\" >\r\n                            {row.pages}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item xs={7}></Grid>\r\n                    <Grid container item xs={3}>\r\n                        <Typography variant=\"h6\" >\r\n                            Año de publicación\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item xs={2}>\r\n                        <Typography variant=\"subtitle1\" >\r\n                            {row.year}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </Box>\r\n            </Collapse>\r\n            </DarkTableCell>\r\n        </DarkTableRow>\r\n        </React.Fragment>\r\n    );\r\n    }\r\n\r\n    //const [ rowsPerPage, page, handleChangePage, handleChangeRowsPerPage] = ElementsPaginateTable();\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [page, setPage] = useState(0);\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n    \r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n\r\n    return(\r\n        <div>\r\n            {(userDetails.profile_id===1 &&\r\n                <Box mb={1}>{ButtonAdd(\"Agregar libro\", \"Agregar libro...\", clickAddBook, <AddBoxIcon /> , loading)}</Box>\r\n            )}\r\n            {BackdropLoading(loading)}\r\n            <Grid container spacing={2}>\r\n            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <Typography variant=\"h4\">\r\n                    Mantenimiento de Libros\r\n                </Typography>\r\n            </Grid>\r\n            {hasError && \r\n                gridMessageError(\"\")\r\n            }\r\n            \r\n            <Grid item lg={3} md={2} sm={1} xs={\"auto\"}></Grid>\r\n            <Grid item lg={6} md={8} sm={10} xs={12}>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"collapsible table\">\r\n                        <TableHead>\r\n                            <DarkTableRow>\r\n                                <DarkTableCell />\r\n                                <DarkTableCell>{\"Libro\"}</DarkTableCell>\r\n                                <DarkTableCell align=\"right\">{\"Autor\"}</DarkTableCell>\r\n                                <DarkTableCell align=\"right\">{\"Editorial\"}</DarkTableCell>\r\n                                <DarkTableCell align=\"left\">{userDetails.profile_id===3 ? \"Solicitar préstamo\" : \"\"}</DarkTableCell>\r\n                            </DarkTableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {(rows &&\r\n                        rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                            <Row key={row.id} row={row} />\r\n                        )))}\r\n                        </TableBody>\r\n                    \r\n                    </Table>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={rows ? rows.length : 0 }\r\n                        rowsPerPage={rows ? rowsPerPage : 0}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage} />\r\n                    </TableContainer>\r\n            </Grid>\r\n            <Grid item lg={3} md={2} sm={1} xs={\"auto\"}></Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\mantenimientoUsuario\\index.js",["120"],"import { useState, useEffect } from 'react';\r\nimport {Presentational as UserFormulario} from './presentational'\r\nimport { useFetch } from '../customHooks/requestAPI'\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useAuthState } from '../context';\r\n\r\nexport const Container=(props)=>{\r\n    const { userDetails } = useAuthState();\r\n\r\n    const [dataUser, setDataUser]=useState({\r\n        first_name:props.location.state.first_name??\"\",\r\n        last_name:props.location.state.last_name??\"\",\r\n        email:props.location.state.email??\"\",\r\n        password:props.location.state.password??\"\",\r\n        confirm_password: userDetails.profile_id === 3 ? props.location.state.password : props.location.state.confirm_password??\"\",\r\n        phone:props.location.state.phone??\"\",\r\n        profile_id:props.location.state.profile_id??3,\r\n        id:props.location.state.id??0\r\n    });\r\n    \r\n    const [url, setUrl]=useState(\"\");\r\n    const [requestOptions, setRequestOptions]=useState(\r\n        { \r\n            method:\"POST\", \r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify(dataUser)\r\n        }\r\n    );\r\n    const [back, setBack]=useState(false);\r\n    const [ response, loading, hasError, message] = useFetch(url,setUrl, \r\n        requestOptions);\r\n        useEffect(()=>{\r\n            const clearData=()=>{\r\n                setDataUser({...dataUser, profile_id:3, first_name:\"\", last_name:\"\", email:\"\", password:\"\", confirm_password:\"\", phone:\"\"});\r\n            };\r\n\r\n            if(response.success){\r\n                clearData();\r\n            }\r\n        },[response]);\r\n    \r\n        const SubmitForm= (ev)=>{\r\n            //setting url to call api hook\r\n            if(!dataUser.id){\r\n                setRequestOptions({...requestOptions, method:\"POST\", body:JSON.stringify(dataUser)});\r\n                setUrl(\"http://localhost:3000/user/add\");    \r\n            }else{\r\n                setRequestOptions({...requestOptions, method:\"PUT\", body:JSON.stringify(dataUser)});\r\n                setUrl(\"http://localhost:3000/user/update\");\r\n            }\r\n            \r\n        };\r\n\r\n    const onChangeInput=(ev)=>{\r\n        setDataUser({...dataUser, [ev.target.id]: ev.target.value})\r\n    };\r\n    const backList=()=>{\r\n        setBack(true);\r\n    };\r\n    return(\r\n        <div>\r\n            {((back && userDetails.profile_id === 1) && \r\n                    <Redirect to=\"/usuario/lista\" push={true} />\r\n            )}\r\n            {((back && userDetails.profile_id === 3) && \r\n                    <Redirect to=\"/solicitudesLector\" push={true} />\r\n            )}\r\n            <UserFormulario dataUser={dataUser} \r\n                            setDataUser={setDataUser} \r\n                            onChangeInput={onChangeInput} \r\n                            submitForm={SubmitForm}\r\n                            backList={backList}\r\n                            error={hasError}\r\n                            response={response}\r\n                            loading={loading}\r\n                            message={message}\r\n                            userDetails={userDetails}\r\n                            />\r\n        </div>\r\n    )\r\n};","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\mantenimientoUsuario\\presentational.js",[],"C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaUsuarios\\index.js",[],"C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaUsuarios\\presentational.js",["121"],"import React, {useState} from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid, Button, Box } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { DarkTableCell, DarkTableRow, gridMessageError, BackdropLoading }  from '../customHooks/customComponents';\r\nimport { ButtonAdd } from '../customHooks/customComponents'\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nexport const Presentational=({rows, setRows, clickAddUser, clickEditUser, loading})=>{\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [page, setPage] = useState(0);\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n    \r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    return(\r\n        <div>\r\n        {BackdropLoading(loading)}\r\n        <Box mb={1}>{ButtonAdd(\"Agregar usuario\", \"Agregar usuario\", clickAddUser, <AddBoxIcon /> ,loading)}</Box>\r\n        <Grid container spacing={2}>\r\n            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                <Typography variant=\"h4\">\r\n                    Mantenimiento de Usuarios\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item lg={1} md={1} sm={\"auto\"} xs={\"auto\"}></Grid>\r\n            <Grid item lg={10} md={10} sm={12} xs={12}>\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"collapsible table\">\r\n                        <TableHead>\r\n                            <DarkTableRow>\r\n                                <DarkTableCell>{\"Nombre\"}</DarkTableCell>\r\n                                <DarkTableCell align=\"right\">{\"Apellido\"}</DarkTableCell>\r\n                                <DarkTableCell align=\"right\">{\"Email\"}</DarkTableCell>\r\n                                <DarkTableCell align=\"right\">{\"Teléfono\"}</DarkTableCell>\r\n                                <DarkTableCell align=\"right\">{\"Rol\"}</DarkTableCell>\r\n                                <DarkTableCell />\r\n                            </DarkTableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        {(rows &&\r\n                        rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((item) => (\r\n                            <DarkTableRow>\r\n                                <DarkTableCell>{item.first_name}</DarkTableCell>\r\n                                <DarkTableCell>{item.last_name}</DarkTableCell>\r\n                                <DarkTableCell>{item.email}</DarkTableCell>\r\n                                <DarkTableCell>{item.phone}</DarkTableCell>\r\n                                <DarkTableCell> {\r\n                                {\r\n                                    1: \"Administrador\",\r\n                                    2: \"Bibliotecario\",\r\n                                    3: \"Lector\",\r\n                                    }[ item.profile_id ]\r\n                                }\r\n                                </DarkTableCell>\r\n                                <DarkTableCell>\r\n                                <Button variant=\"contained\" title=\"Editar usuario...\" size=\"small\" onClick={()=>clickEditUser(item)}>\r\n                            <EditIcon />\r\n                        </Button>,\r\n                                </DarkTableCell>\r\n                            </DarkTableRow>\r\n                        )))}\r\n                        </TableBody>\r\n                    \r\n                    </Table>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={rows ? rows.length : 0 }\r\n                        rowsPerPage={rows ? rowsPerPage : 0}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage} />\r\n                    </TableContainer>\r\n            </Grid>\r\n            <Grid item lg={1} md={1} sm={\"auto\"} xs={\"auto\"}></Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\customHooks\\requestAPI\\index.js",["122"],"import {useEffect, useState} from \"react\";\r\nexport function useFetch(url, setUrl, opts) {\r\n    const [response, setResponse] = useState({})\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasError, setHasError] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n    \r\n    const doFetch=async()=>{\r\n        try{\r\n            setHasError(false);\r\n            setLoading(true);\r\n            setMessage('');\r\n            setResponse({});\r\n            const response = await fetch(url, opts);\r\n            const data = await response.json();\r\n            console.log(\"fetch data\", data);\r\n            setResponse(data);\r\n            setLoading(false);\r\n            setUrl(\"\");\r\n        }catch(err){\r\n            setMessage(err?.message);\r\n            setLoading(false);\r\n            setHasError(true);\r\n            setResponse({});\r\n            setUrl(\"\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(url===\"\")\r\n            return;\r\n        doFetch();\r\n    }, [url])\r\n    return [ response, loading, hasError, message ];\r\n}","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\mantenimientoLibro\\index.js",["123"],"import { useState, useEffect } from 'react';\r\nimport {Presentational as UserFormulario} from './presentational'\r\nimport { useFetch } from '../customHooks/requestAPI'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const Container=(props)=>{\r\n    const [dataBook, setDataBook]=useState({\r\n        title:props.location.state.title??\"\",\r\n        author:props.location.state.author??\"\",\r\n        editorial:props.location.state.editorial??\"\",\r\n        pages:props.location.state.pages??0,\r\n        year:props.location.state.year??0,\r\n        id:props.location.state.id??0\r\n    });\r\n    const [url, setUrl]=useState(\"\");\r\n    const [requestOptions, setRequestOptions]=useState(\r\n        { \r\n            method:\"POST\", \r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify(dataBook)\r\n        }\r\n    );\r\n    const [back, setBack]=useState(false);\r\n    const clearData=()=>{\r\n        setDataBook({...dataBook, title:\"\", author:\"\", pages:0, year:0, editorial:\"\"});\r\n    };\r\n    const [ response, loading, hasError] = useFetch(url,setUrl, \r\n        requestOptions);\r\n    \r\n    useEffect(()=>{\r\n        if(response.success){\r\n            clearData();\r\n        }\r\n    },[response]);\r\n\r\n    const SubmitForm= (ev)=>{\r\n        //setting url to call api hook\r\n        if(!dataBook.id){\r\n            setRequestOptions({...requestOptions, method:\"POST\", body:JSON.stringify(dataBook)});\r\n            setUrl(\"http://localhost:3000/book/add\");    \r\n        }else{\r\n            console.log(\"data json->\", dataBook);\r\n            setRequestOptions({...requestOptions, method:\"PUT\", body:JSON.stringify(dataBook)});\r\n            setUrl(\"http://localhost:3000/book/update\");\r\n        }\r\n        \r\n    };\r\n\r\n    const onChangeInput=(ev)=>{\r\n        setDataBook({...dataBook, [ev.target.id]: ev.target.value})\r\n    };\r\n    const backList=()=>{\r\n        setBack(true);\r\n    };\r\n    \r\n\r\n    return(\r\n        <div>\r\n        {(back && \r\n                <Redirect to=\"/libro/lista\" push={true} />\r\n        )}\r\n        <UserFormulario dataBook={dataBook} \r\n                        setDataBook={setDataBook} \r\n                        onChangeInput={onChangeInput} \r\n                        submitForm={SubmitForm}\r\n                        backList={backList}\r\n                        response={response}\r\n                        error={hasError}\r\n                        loading={loading}\r\n                        />\r\n        </div>\r\n    )\r\n};","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\mantenimientoLibro\\presentational.js",[],"C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\login\\index.js",[],"C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\login\\presentational.js",["124"],"import { Grid, Box, Typography } from '@material-ui/core';\r\nimport { ButtonAdd, gridMessageError, EditTextBinded, BackdropLoading } from '../customHooks/customComponents';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\n\r\nexport function Presentational(props) {\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={2}>\r\n            <Grid item lg={4} md={3} sm={1} xs={\"auto\"}></Grid>\r\n                <Grid item lg={4} md={6} sm={10} xs={12}>\r\n                <Typography variant=\"h3\" component=\"h2\" align=\"center\">\r\n                    Login\r\n                </Typography>\r\n                </Grid>\r\n                <Grid item lg={4} md={2} sm={1} xs={\"auto\"}></Grid>\r\n                {props.errorMessage && \r\n                    gridMessageError(props.errorMessage)\r\n                }\r\n                <Grid item lg={4} md={3} sm={1} xs={\"auto\"}></Grid>\r\n                <Grid item lg={4} md={6} sm={10} xs={12}>\r\n                    {EditTextBinded(\"email\", \"Email\", props.email, (e) => props.setEmail(e.target.value), props.loading)}\r\n                </Grid>\r\n                <Grid item lg={4} md={3} sm={1} xs={\"auto\"}></Grid>\r\n                <Grid item lg={4} md={3} sm={1} xs={\"auto\"}></Grid>\r\n                <Grid item lg={4} md={6} sm={10} xs={12}>\r\n                    {EditTextBinded(\"password\", \"Password\", props.password, (e) => props.setPassword(e.target.value), props.loading, \"password\")}\r\n                </Grid>\r\n                <Grid item lg={4} md={3} sm={1} xs={\"auto\"}></Grid>\r\n                <Grid item lg={4} md={3} sm={1} xs={\"auto\"}></Grid>\r\n                <Grid item lg={4} md={6} sm={10} xs={12}>\r\n                <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    {ButtonAdd(\"Login\",\"\", props.handleLogin, <ForwardIcon />, props.loading)}\r\n                </Box>\r\n                </Grid>\r\n                <Grid item lg={4} md={3} sm={1} xs={\"auto\"}></Grid>\r\n                </Grid>\r\n                \r\n        </div>\r\n    )\r\n}","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\context\\index.js",[],"C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\context\\actions.js",["125","126"],"import { useFetch } from '../customHooks/requestAPI'\r\nimport { useState } from 'react'\r\nconst ROOT_URL = 'http://localhost:3000';\r\n \r\nexport async function LoginUser(dispatch, loginPayload) {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(loginPayload),\r\n  };\r\n \r\n  try {\r\n    dispatch({ type: 'REQUEST_LOGIN' });\r\n    let response = await fetch(`${ROOT_URL}/user/login`, requestOptions);\r\n    let data = await response.json();\r\n    console.log(\"data getted\", data);\r\n    if (data.success) {\r\n      dispatch({ type: 'LOGIN_SUCCESS', payload: data.user });\r\n      localStorage.setItem('currentUser', JSON.stringify(data.user));\r\n      return data.user;\r\n    }\r\n    dispatch({ type: 'LOGIN_ERROR', error: data.error });\r\n    return;\r\n  } catch (error) {\r\n    dispatch({ type: 'LOGIN_ERROR', error:error.message });\r\n  }\r\n}\r\n \r\nexport async function logout(dispatch) {\r\n  dispatch({ type: 'LOGOUT' });\r\n  localStorage.removeItem('currentUser');\r\n  localStorage.removeItem('token');\r\n}","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\context\\reducer.js",["127","128"],"import React, { useReducer } from \"react\";\r\n \r\nlet user = localStorage.getItem(\"currentUser\")\r\n  ? JSON.parse(localStorage.getItem(\"currentUser\"))\r\n  : null;\r\n// let token = localStorage.getItem(\"currentUser\")\r\n//   ? JSON.parse(localStorage.getItem(\"currentUser\")).auth_token\r\n//   : \"\";\r\n \r\nexport const initialState = {\r\n  userDetails: \"\" || user,\r\n  //token: \"\" || token,\r\n  loading: false,\r\n  errorMessage: null\r\n};\r\n \r\nexport const AuthReducer = (initialState, action) => {\r\n  switch (action.type) {\r\n    case \"REQUEST_LOGIN\":\r\n      return {\r\n        ...initialState,\r\n        errorMessage: \"\",\r\n        loading: true\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        ...initialState,\r\n        userDetails: action.payload,\r\n        //token: action.payload.auth_token,\r\n        loading: false\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...initialState,\r\n        userDetails: null,\r\n        //token: \"\"\r\n      };\r\n \r\n    case \"LOGIN_ERROR\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMessage: action.error,\r\n        userDetails:null\r\n      };\r\n \r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n};","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\context\\context.js",[],"C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\utilities\\index.js",["129","130"],"export function today(){\r\n    return new Date().toISOString().\r\n    replace(/T/, ' ').      // replace T with a space\r\n    replace(/\\..+/, ''); \r\n}","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaSolicitudesBibliotecario\\index.js",[],"C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaSolicitudesBibliotecario\\presentational.js",["131"],"import React, {useState} from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { DarkTableCell, DarkTableRow, gridMessageError, gridMessageSuccess, BackdropLoading, ButtonAdd }  from '../customHooks/customComponents';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\nexport const Presentational=({\r\n                            requests, \r\n                            userAuth,\r\n                            onClickDenegate,\r\n                            onClickApprove,\r\n                            onClickDeliver,\r\n                            error,\r\n                            response,\r\n                            message,\r\n                            loading\r\n                        })=>{\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [page, setPage] = useState(0);\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n        };\r\n    \r\n        const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n        };\r\n    const classes=useStyles();\r\n    return(\r\n        <div>\r\n            {BackdropLoading(loading)}\r\n            <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Typography variant=\"h4\">\r\n                        Solicitudes de préstamo\r\n                    </Typography>\r\n                </Grid>\r\n                {error && \r\n                    <Grid item xs={12}>\r\n                        {gridMessageError(error)}\r\n                    </Grid>\r\n                }\r\n                {(response &&\r\n                    response.success===false) &&\r\n                    <Grid item xs={12}>\r\n                        {gridMessageError(response.error)}\r\n                    </Grid>\r\n                }\r\n                <Grid item lg={1} md={1} sm={\"auto\"} xs={\"auto\"}></Grid>\r\n                <Grid item lg={10} md={10} sm={12} xs={12}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"collapsible table\">\r\n                            <TableHead>\r\n                                <DarkTableRow>\r\n                                    <DarkTableCell>{\"Libro\"}</DarkTableCell>\r\n                                    <DarkTableCell align=\"right\">{\"Lector\"}</DarkTableCell>\r\n                                    <DarkTableCell align=\"right\">{\"Email\"}</DarkTableCell>\r\n                                    <DarkTableCell align=\"left\">{\"Teléfono\"}</DarkTableCell>\r\n                                    <DarkTableCell align=\"left\">{\"Fecha de Solicitud\"}</DarkTableCell>\r\n                                    <DarkTableCell align=\"center\">{\"Estatus\"}</DarkTableCell>\r\n                                    <DarkTableCell align=\"left\">{\"Fecha de Actualización\"}</DarkTableCell>\r\n                                    <DarkTableCell></DarkTableCell>\r\n                                </DarkTableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {(requests &&\r\n                            requests.slice(page * rowsPerPage??0, page * rowsPerPage + rowsPerPage).map((item) => (\r\n                                <DarkTableRow key={item.id} style={(item.BORROWDATE && !item.DELIVERYDATE) ? { backgroundColor : \"rgb(199 243 199)\" } : ((item.DENEGATEDDATE) ? { backgroundColor : \"rgb(251 201 197)\" } :  (item.DELIVERYDATE)  ? { backgroundColor : \"#8bd9fb8f\" } : { backgroundColor : \"rgb(255 254 169)\" })}>\r\n                                    <DarkTableCell>{item.title}</DarkTableCell>\r\n                                    <DarkTableCell>{item.first_name} {item.last_name}</DarkTableCell>\r\n                                    <DarkTableCell>{item.email}</DarkTableCell>\r\n                                    <DarkTableCell>{item.phonw}</DarkTableCell>\r\n                                    <DarkTableCell align=\"right\">{item.REQUESTDATE}</DarkTableCell>\r\n                                    <DarkTableCell align=\"center\">{ (!item.BORROWDATE && !item.DENEGATEDDATE) ? \"NUEVA SOLICITUD\" : (item.BORROWDATE && !item.DELIVERYDATE) ? \"AUTORIZADO\" : ((item.DENEGATEDDATE) ? \"NO AUTORIZADO\" : \"LIBRO DEVUELTO\") }</DarkTableCell>\r\n                                    <DarkTableCell align=\"left\">{(item.BORROWDATE && !item.DELIVERYDATE) ? item.BORROWDATE : ((item.DENEGATEDDATE) ? item.DENEGATEDDATE : item.DELIVERYDATE)}</DarkTableCell>\r\n                                    <DarkTableCell align=\"center\">\r\n                                    { (item.REQUESTDATE && !item.BORROWDATE && !item.DENEGATEDDATE ) ? \r\n                                        <div>\r\n                                            <Button className={classes.button} variant=\"contained\" startIcon={<ThumbUpIcon />} color=\"primary\" disabled={loading} title=\"Autorizar solicitud...\" size=\"large\" onClick={()=>onClickApprove(item)} />\r\n                                            <Button variant=\"contained\" startIcon={<ThumbDownIcon />} color=\"secondary\" disabled={loading} title=\"Denegar solicitud...\" size=\"large\" onClick={()=>onClickDenegate(item)} />\r\n                                        </div>\r\n                                        : (item.BORROWDATE && !item.DELIVERYDATE) ? \r\n                                        ButtonAdd(\"\", \"Libro devuelto...\", ()=>onClickDeliver(item), <CheckCircleIcon /> , loading)\r\n                                        : \"\" }\r\n                                    </DarkTableCell>\r\n                                </DarkTableRow>\r\n                            )))}\r\n                            </TableBody>\r\n                        \r\n                        </Table>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 25]}\r\n                            component=\"div\"\r\n                            count={requests ? requests.length : 0 }\r\n                            rowsPerPage={requests ? rowsPerPage : 0}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage} />\r\n                        </TableContainer>\r\n                </Grid>\r\n                <Grid item lg={1} md={1} sm={\"auto\"} xs={\"auto\"}></Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaSolicitudesLector\\index.js",[],"C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\listaSolicitudesLector\\presentational.js",["132","133","134","135","136","137","138","139","140"],"import React, {useState} from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid, IconButton, Collapse, Box, Backdrop, CircularProgress, InputLabel, TableCell, TableRow } from '@material-ui/core';\r\nimport { DarkTableCell, DarkTableRow, gridMessageError, BackdropLoading }  from '../customHooks/customComponents';\r\n\r\nexport const Presentational=({\r\n    requests, \r\n    error,\r\n    response,\r\n    message,\r\n    loading\r\n})=>{\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [page, setPage] = useState(0);\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n    \r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n\r\nreturn(\r\n        <div>\r\n            {BackdropLoading(loading)}\r\n            <Grid container spacing={2}>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                    <Typography variant=\"h4\">\r\n                        Mis Solicitudes\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item lg={1} md={1} sm={\"auto\"} xs={\"auto\"}></Grid>\r\n                <Grid item lg={10} md={10} sm={12} xs={12}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"collapsible table\">\r\n                            <TableHead>\r\n                                <DarkTableRow>\r\n                                    <DarkTableCell>{\"Libro\"}</DarkTableCell>\r\n                                    <DarkTableCell align=\"right\">{\"Fecha de Solicitud\"}</DarkTableCell>\r\n                                    <DarkTableCell align=\"right\">{\"Estatus\"}</DarkTableCell>\r\n                                    <DarkTableCell align=\"left\">{\"Fecha de Actualización\"}</DarkTableCell>\r\n                                </DarkTableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {(requests &&\r\n                            requests.slice(page * rowsPerPage??0, page * rowsPerPage + rowsPerPage).map((item) => (\r\n                                <DarkTableRow key={item.id} style={(item.BORROWDATE && !item.DELIVERYDATE) ? { backgroundColor : \"rgb(199 243 199)\" } : ((item.DENEGATEDDATE) ? { backgroundColor : \"rgb(251 201 197)\" } :  (item.DELIVERYDATE)  ? { backgroundColor : \"#8bd9fb8f\" } : { backgroundColor : \"rgb(255 254 169)\" })}>\r\n                                    <DarkTableCell>{item.title}</DarkTableCell>\r\n                                    <DarkTableCell align=\"right\">{item.REQUESTDATE}</DarkTableCell>\r\n                                    <DarkTableCell align=\"right\">{ (!item.BORROWDATE && !item.DENEGATEDDATE) ? \"NUEVA SOLICITUD\" : (item.BORROWDATE && !item.DELIVERYDATE) ? \"AUTORIZADO\" : ((item.DENEGATEDDATE) ? \"NO AUTORIZADO\" : \"LIBRO DEVUELTO\") }\r\n                                                </DarkTableCell>\r\n                                    <DarkTableCell align=\"left\">{(item.BORROWDATE && !item.DELIVERYDATE) ? item.BORROWDATE : ((item.DENEGATEDDATE) ? item.DENEGATEDDATE : item.DELIVERYDATE)}</DarkTableCell>\r\n                                </DarkTableRow>\r\n                            )))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            rowsPerPageOptions={[5, 10, 25]}\r\n                            component=\"div\"\r\n                            count={requests ? requests.length : 0 }\r\n                            rowsPerPage={requests ? rowsPerPage : 0}\r\n                            page={page}\r\n                            onChangePage={handleChangePage}\r\n                            onChangeRowsPerPage={handleChangeRowsPerPage} />\r\n                        </TableContainer>\r\n                </Grid>\r\n                <Grid item lg={1} md={1} sm={\"auto\"} xs={\"auto\"}></Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}","C:\\Proyectos\\Challenges\\intelligential\\3. Caso Práctico\\client-react\\src\\components\\customHooks\\customComponents\\index.js",["141","142"],"import { useState, useEffect } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { TableRow, TableCell, Button, Grid, Box, InputLabel, TextField, Backdrop, CircularProgress } from '@material-ui/core'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nexport const DarkTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n        fontSize: 14,\r\n        },\r\n    },\r\n    }))(TableRow);\r\nexport const DarkTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n        fontSize: 20,\r\n    },\r\n    body: {\r\n        fontSize: 18,\r\n    },\r\n    }))(TableCell);\r\n    \r\n    const GreenButton = withStyles((theme) => ({\r\n        root: {\r\n        color:\"white\",\r\n          //color: theme.palette.getContrastText(green[500]),\r\n          backgroundColor: green[700],\r\n          '&:hover': {\r\n            backgroundColor: green[900],\r\n          },\r\n        },\r\n      }))(Button);\r\n\r\nexport const ButtonSave = (text, clickEvent, disabled) => {\r\n    return(\r\n        <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        onClick={clickEvent}\r\n        title={text}\r\n        disabled={disabled}\r\n        startIcon={<SaveIcon />}\r\n        >\r\n        {text}\r\n        </Button>\r\n    )\r\n};\r\nexport const ButtonCancel = (text, clickEvent, disabled) => {\r\n    return(\r\n        <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        size=\"large\"\r\n        onClick={clickEvent}\r\n        disabled={disabled}\r\n        title={text}\r\n        startIcon={<CancelIcon />}\r\n        >\r\n        {text}\r\n        </Button>\r\n    )\r\n};\r\nexport const ButtonAdd = (text, tooltip ,clickEvent, icon, disabled) => {\r\n    return(\r\n        <GreenButton\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        text={text}\r\n        title={tooltip}\r\n        onClick={clickEvent}\r\n        disabled={disabled}\r\n        startIcon={icon}\r\n        >\r\n        {text}\r\n        </GreenButton>\r\n    )\r\n};\r\nexport const gridMessageError=(message)=>{\r\n    return (\r\n        <Grid container>\r\n            <Grid item lg={3} md={2} sm={1} xs={\"auto\"}></Grid>\r\n            <Grid item lg={6} md={8} sm={10} xs={12}>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <InputLabel error><ErrorIcon /> Error al procesar la solicitud. {message}</InputLabel>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item lg={3} md={2} sm={1} xs={\"auto\"}></Grid>\r\n        </Grid>\r\n    )\r\n}\r\nexport const gridMessageSuccess=(message)=>{\r\n        \r\n    return (\r\n        <Grid container>\r\n            <Grid item lg={4} md={2} sm={1} xs={\"auto\"}></Grid>\r\n            <Grid item lg={4} md={8} sm={10} xs={12}>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <InputLabel style={{color:\"green\"}} ><DoneIcon /> Solicitud procesada con éxito. {message}</InputLabel>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item lg={4} md={2} sm={1} xs={\"auto\"}></Grid>\r\n        </Grid>\r\n    )\r\n}\r\nexport const EditTextBinded=(id, label, value, onChangeInput, disabled, type=\"text\")=>{\r\n    return (<TextField\r\n        required\r\n        type={type}\r\n        fullWidth\r\n        id={id}\r\n        label={label}\r\n        variant=\"outlined\"\r\n        value={value} \r\n        disabled={disabled}\r\n        onChange={(ev)=> onChangeInput(ev)}\r\n    />)\r\n\r\n};\r\n\r\n\r\nexport const BackdropLoading=(loading)=>{\r\n    return (\r\n        <Backdrop style={{zIndex:1000, color:\"#000\"}} open={loading}>\r\n            <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n    )\r\n}\r\n\r\nexport function ElementsPaginateTable(){\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [page, setPage] = useState(0);\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n    \r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n        setRowsPerPage(rowsPerPage);\r\n      };\r\n\r\n    return [ rowsPerPage, page, setRowsPerPage, setPage, handleChangePage, handleChangeRowsPerPage];\r\n}",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":11,"column":10,"nodeType":"149","messageId":"150","endLine":11,"endColumn":14},{"ruleId":"147","severity":1,"message":"151","line":13,"column":8,"nodeType":"149","messageId":"150","endLine":13,"endColumn":17},{"ruleId":"147","severity":1,"message":"152","line":14,"column":8,"nodeType":"149","messageId":"150","endLine":14,"endColumn":18},{"ruleId":"147","severity":1,"message":"153","line":21,"column":10,"nodeType":"149","messageId":"150","endLine":21,"endColumn":19},{"ruleId":"147","severity":1,"message":"154","line":4,"column":23,"nodeType":"149","messageId":"150","endLine":4,"endColumn":42},{"ruleId":"147","severity":1,"message":"155","line":9,"column":50,"nodeType":"149","messageId":"150","endLine":9,"endColumn":58},{"ruleId":"147","severity":1,"message":"156","line":9,"column":60,"nodeType":"149","messageId":"150","endLine":9,"endColumn":76},{"ruleId":"147","severity":1,"message":"157","line":9,"column":78,"nodeType":"149","messageId":"150","endLine":9,"endColumn":88},{"ruleId":"147","severity":1,"message":"158","line":14,"column":74,"nodeType":"149","messageId":"150","endLine":14,"endColumn":95},{"ruleId":"159","severity":1,"message":"160","line":43,"column":11,"nodeType":"161","endLine":43,"endColumn":21,"suggestions":"162"},{"ruleId":"147","severity":1,"message":"163","line":11,"column":39,"nodeType":"149","messageId":"150","endLine":11,"endColumn":55},{"ruleId":"159","severity":1,"message":"164","line":33,"column":8,"nodeType":"161","endLine":33,"endColumn":13,"suggestions":"165"},{"ruleId":"159","severity":1,"message":"166","line":37,"column":7,"nodeType":"161","endLine":37,"endColumn":17,"suggestions":"167"},{"ruleId":"147","severity":1,"message":"168","line":2,"column":55,"nodeType":"149","messageId":"150","endLine":2,"endColumn":70},{"ruleId":"147","severity":1,"message":"169","line":1,"column":10,"nodeType":"149","messageId":"150","endLine":1,"endColumn":18},{"ruleId":"147","severity":1,"message":"170","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":18},{"ruleId":"147","severity":1,"message":"171","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":13},{"ruleId":"147","severity":1,"message":"172","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":27},{"ruleId":"173","severity":1,"message":"174","line":2,"column":36,"nodeType":"175","messageId":"176","endLine":2,"endColumn":37,"fix":"177"},{"ruleId":"173","severity":1,"message":"174","line":3,"column":22,"nodeType":"175","messageId":"176","endLine":3,"endColumn":23,"fix":"178"},{"ruleId":"147","severity":1,"message":"179","line":10,"column":57,"nodeType":"149","messageId":"150","endLine":10,"endColumn":75},{"ruleId":"147","severity":1,"message":"180","line":9,"column":16,"nodeType":"149","messageId":"150","endLine":9,"endColumn":26},{"ruleId":"147","severity":1,"message":"181","line":9,"column":28,"nodeType":"149","messageId":"150","endLine":9,"endColumn":36},{"ruleId":"147","severity":1,"message":"182","line":9,"column":38,"nodeType":"149","messageId":"150","endLine":9,"endColumn":41},{"ruleId":"147","severity":1,"message":"155","line":9,"column":43,"nodeType":"149","messageId":"150","endLine":9,"endColumn":51},{"ruleId":"147","severity":1,"message":"156","line":9,"column":53,"nodeType":"149","messageId":"150","endLine":9,"endColumn":69},{"ruleId":"147","severity":1,"message":"157","line":9,"column":71,"nodeType":"149","messageId":"150","endLine":9,"endColumn":81},{"ruleId":"147","severity":1,"message":"183","line":9,"column":83,"nodeType":"149","messageId":"150","endLine":9,"endColumn":92},{"ruleId":"147","severity":1,"message":"184","line":9,"column":94,"nodeType":"149","messageId":"150","endLine":9,"endColumn":102},{"ruleId":"147","severity":1,"message":"163","line":10,"column":39,"nodeType":"149","messageId":"150","endLine":10,"endColumn":55},{"ruleId":"147","severity":1,"message":"153","line":1,"column":20,"nodeType":"149","messageId":"150","endLine":1,"endColumn":29},{"ruleId":"147","severity":1,"message":"185","line":2,"column":22,"nodeType":"149","messageId":"150","endLine":2,"endColumn":32},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'useEffect' is defined but never used.","'MyRequestsComponent' is defined but never used.","'Backdrop' is defined but never used.","'CircularProgress' is defined but never used.","'InputLabel' is defined but never used.","'ElementsPaginateTable' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataUser'. Either include it or remove the dependency array. You can also do a functional update 'setDataUser(d => ...)' if you only need 'dataUser' in the 'setDataUser' call.","ArrayExpression",["188"],"'gridMessageError' is defined but never used.","React Hook useEffect has a missing dependency: 'doFetch'. Either include it or remove the dependency array.",["189"],"React Hook useEffect has a missing dependency: 'clearData'. Either include it or remove the dependency array.",["190"],"'BackdropLoading' is defined but never used.","'useFetch' is defined but never used.","'useState' is defined but never used.","'React' is defined but never used.","'useReducer' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"191","text":"192"},{"range":"193","text":"194"},"'gridMessageSuccess' is defined but never used.","'IconButton' is defined but never used.","'Collapse' is defined but never used.","'Box' is defined but never used.","'TableCell' is defined but never used.","'TableRow' is defined but never used.","'makeStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},[61,68],"\r\n    .",[85,123],"      // replace T with a space\r\n    .","Update the dependencies array to be: [dataUser, response]",{"range":"201","text":"202"},"Update the dependencies array to be: [doFetch, url]",{"range":"203","text":"204"},"Update the dependencies array to be: [clearData, response]",{"range":"205","text":"206"},[1699,1709],"[dataUser, response]",[998,1003],"[doFetch, url]",[1301,1311],"[clearData, response]"]