{"ast":null,"code":"import { useFetch } from '../customHooks/requestAPI';\nimport { useState } from 'react';\nconst ROOT_URL = 'http://localhost:3000';\nexport async function LoginUser(dispatch, loginPayload) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(loginPayload)\n  };\n\n  try {\n    dispatch({\n      type: 'REQUEST_LOGIN'\n    });\n    let response = await fetch(`${ROOT_URL}/user/login`, requestOptions);\n    let data = await response.json();\n    console.log(\"data getted\", data);\n\n    if (data.success) {\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: data.user\n      });\n      localStorage.setItem('currentUser', JSON.stringify(data.user));\n      return data.user;\n    }\n\n    dispatch({\n      type: 'LOGIN_ERROR',\n      error: data.error\n    });\n    return;\n  } catch (error) {\n    dispatch({\n      type: 'LOGIN_ERROR',\n      error: JSON.stringify(error)\n    });\n  }\n}\n_c = LoginUser;\nexport async function logout(dispatch) {\n  dispatch({\n    type: 'LOGOUT'\n  });\n  localStorage.removeItem('currentUser');\n  localStorage.removeItem('token');\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginUser\");","map":{"version":3,"sources":["C:/Proyectos/Challenges/intelligential/3. Caso Pr√°ctico/client-react/src/components/context/actions.js"],"names":["useFetch","useState","ROOT_URL","LoginUser","dispatch","loginPayload","requestOptions","method","headers","body","JSON","stringify","type","response","fetch","data","json","console","log","success","payload","user","localStorage","setItem","error","logout","removeItem"],"mappings":"AAAA,SAASA,QAAT,QAAyB,2BAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,OAAO,eAAeC,SAAf,CAAyBC,QAAzB,EAAmCC,YAAnC,EAAiD;AACtD,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY;AAGrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,YAAf;AAHe,GAAvB;;AAMA,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,QAAS,aAAb,EAA2BI,cAA3B,CAA1B;AACA,QAAIS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,IAA3B;;AACA,QAAIA,IAAI,CAACI,OAAT,EAAkB;AAChBf,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE,eAAR;AAAyBQ,QAAAA,OAAO,EAAEL,IAAI,CAACM;AAAvC,OAAD,CAAR;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCb,IAAI,CAACC,SAAL,CAAeI,IAAI,CAACM,IAApB,CAApC;AACA,aAAON,IAAI,CAACM,IAAZ;AACD;;AACDjB,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,aAAR;AAAuBY,MAAAA,KAAK,EAAET,IAAI,CAACS;AAAnC,KAAD,CAAR;AACA;AACD,GAZD,CAYE,OAAOA,KAAP,EAAc;AACdpB,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,aAAR;AAAuBY,MAAAA,KAAK,EAAEd,IAAI,CAACC,SAAL,CAAea,KAAf;AAA9B,KAAD,CAAR;AACD;AACF;KAtBqBrB,S;AAwBtB,OAAO,eAAesB,MAAf,CAAsBrB,QAAtB,EAAgC;AACrCA,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACAU,EAAAA,YAAY,CAACI,UAAb,CAAwB,aAAxB;AACAJ,EAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACD","sourcesContent":["import { useFetch } from '../customHooks/requestAPI'\r\nimport { useState } from 'react'\r\nconst ROOT_URL = 'http://localhost:3000';\r\n \r\nexport async function LoginUser(dispatch, loginPayload) {\r\n  const requestOptions = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(loginPayload),\r\n  };\r\n \r\n  try {\r\n    dispatch({ type: 'REQUEST_LOGIN' });\r\n    let response = await fetch(`${ROOT_URL}/user/login`, requestOptions);\r\n    let data = await response.json();\r\n    console.log(\"data getted\", data);\r\n    if (data.success) {\r\n      dispatch({ type: 'LOGIN_SUCCESS', payload: data.user });\r\n      localStorage.setItem('currentUser', JSON.stringify(data.user));\r\n      return data.user;\r\n    }\r\n    dispatch({ type: 'LOGIN_ERROR', error: data.error });\r\n    return;\r\n  } catch (error) {\r\n    dispatch({ type: 'LOGIN_ERROR', error: JSON.stringify(error) });\r\n  }\r\n}\r\n \r\nexport async function logout(dispatch) {\r\n  dispatch({ type: 'LOGOUT' });\r\n  localStorage.removeItem('currentUser');\r\n  localStorage.removeItem('token');\r\n}"]},"metadata":{},"sourceType":"module"}