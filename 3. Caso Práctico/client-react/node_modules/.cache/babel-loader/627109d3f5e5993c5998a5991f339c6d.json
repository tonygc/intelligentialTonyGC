{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from \"react\";\nexport const Request_Api = (url, options) => {\n  _s();\n\n  const {\n    data,\n    setData\n  } = useState({});\n  const fetchData = useCallback(async () => {\n    const response = await fetch(url, options);\n    const json = await response.json();\n    setData(json);\n  }, []);\n  useEffect(() => {\n    console.log(\"entramos a useeffect\");\n    fetchData();\n  }, [fetchData]);\n  return {\n    data: data\n  };\n};\n\n_s(Request_Api, \"iD7oLS9wwlguQ0G9u+l1QkNte4I=\");\n\n_c = Request_Api;\n\nvar _c;\n\n$RefreshReg$(_c, \"Request_Api\");","map":{"version":3,"sources":["C:/Proyectos/Challenges/intelligential/3. Caso PrÃ¡ctico/client-react/src/components/customHooks/requestAPI/index.js"],"names":["useEffect","useState","useCallback","Request_Api","url","options","data","setData","fetchData","response","fetch","json","console","log"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,EAA6BC,WAA7B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAgB;AAAA;;AACvC,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgBN,QAAQ,CAAC,EAAD,CAA9B;AAIA,QAAMO,SAAS,GAAGN,WAAW,CAAC,YAAU;AACpC,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAMC,OAAN,CAA5B;AACA,UAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AACH,GAJ4B,EAI3B,EAJ2B,CAA7B;AAMAX,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAL,IAAAA,SAAS;AACZ,GAHQ,EAGN,CAACA,SAAD,CAHM,CAAT;AAKA,SAAO;AAAEF,IAAAA,IAAI,EAACA;AAAP,GAAP;AACH,CAjBM;;GAAMH,W;;KAAAA,W","sourcesContent":["import {useEffect, useState, useCallback} from \"react\";\r\n\r\nexport const Request_Api = (url, options)=>{\r\n    const {data, setData}=useState({\r\n\r\n    });\r\n\r\n    const fetchData = useCallback(async ()=>{\r\n        const response = await fetch(url, options);\r\n        const json = await response.json();\r\n        setData(json);\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        console.log(\"entramos a useeffect\");\r\n        fetchData();\r\n    }, [fetchData]);\r\n    \r\n    return { data:data };\r\n};"]},"metadata":{},"sourceType":"module"}