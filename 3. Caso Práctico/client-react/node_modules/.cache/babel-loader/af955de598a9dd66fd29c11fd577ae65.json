{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\Challenges\\\\intelligential\\\\3. Caso Pr\\xE1ctico\\\\client-react\\\\src\\\\components\\\\listaSolicitudesBibliotecario\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Presentational as PresentationalHistoryBooks } from './presentational';\nimport { useFetch } from '../customHooks/requestAPI';\nimport { useAuthState } from '../context';\nimport { today } from '../utilities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Container = () => {\n  _s();\n\n  const [url, setUrl] = useState(\"http://localhost:3000/bookRequest/getAll\");\n  const [requestOptions, setRequestOptions] = useState({\n    method: \"GET\",\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n    body: null\n  });\n  const [response, loading, hasError, message] = useFetch(url, setUrl, requestOptions);\n  const {\n    userDetails\n  } = useAuthState();\n\n  const onClickApprove = item => {\n    item.BORROWDATE = today();\n    sendUpdate();\n  };\n\n  const onClickDenegate = item => {\n    item.DENEGATEDDATE = today();\n    sendUpdate();\n  };\n\n  const onClickDeliver = item => {\n    item.DELIVERYDATE = today();\n    sendUpdate();\n  };\n\n  const sendUpdate = () => {\n    setRequestOptions({ ...requestOptions,\n      method: \"PUT\",\n      body: JSON.stringify(item)\n    });\n    setUrl(\"http://localhost:3000/bookRequest/update\");\n  };\n\n  useEffect(() => {\n    if (!response.data) {\n      if (response.success) console.log(\"SOLICITUD ACTUALIZADA\");\n      setRequestOptions({\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        method: \"GET\",\n        body: null\n      });\n      setUrl(\"http://localhost:3000/bookRequest/getAll\");\n    }\n  }, [response]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: response && /*#__PURE__*/_jsxDEV(PresentationalHistoryBooks, {\n      requests: response.data,\n      userAuth: userDetails,\n      onClickApprove: onClickApprove,\n      onClickDenegate: onClickDenegate,\n      onClickDeliver: onClickDeliver,\n      error: hasError,\n      response: response,\n      loading: loading,\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Container, \"xI9DfP1bThgi0kTc+1s+3YqVJLY=\", false, function () {\n  return [useFetch, useAuthState];\n});\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["C:/Proyectos/Challenges/intelligential/3. Caso PrÃ¡ctico/client-react/src/components/listaSolicitudesBibliotecario/index.js"],"names":["useState","useEffect","Presentational","PresentationalHistoryBooks","useFetch","useAuthState","today","Container","url","setUrl","requestOptions","setRequestOptions","method","headers","body","response","loading","hasError","message","userDetails","onClickApprove","item","BORROWDATE","sendUpdate","onClickDenegate","DENEGATEDDATE","onClickDeliver","DELIVERYDATE","JSON","stringify","data","success","console","log"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAAQC,cAAc,IAAIC,0BAA1B,QAA2D,kBAA3D;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,KAAT,QAAsB,cAAtB;;AACA,OAAO,MAAMC,SAAS,GAAC,MAAI;AAAA;;AACvB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAcT,QAAQ,CAAC,0CAAD,CAA5B;AACA,QAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAoCX,QAAQ,CAC9C;AACIY,IAAAA,MAAM,EAAC,KADX;AAEIC,IAAAA,OAAO,EAAE;AACL,gBAAU,mCADL;AAEL,sBAAgB;AAFX,KAFb;AAMIC,IAAAA,IAAI,EAAC;AANT,GAD8C,CAAlD;AAUA,QAAM,CAAEC,QAAF,EAAYC,OAAZ,EAAqBC,QAArB,EAA+BC,OAA/B,IAA0Cd,QAAQ,CAACI,GAAD,EAAMC,MAAN,EAAcC,cAAd,CAAxD;AACA,QAAM;AAAES,IAAAA;AAAF,MAAiBd,YAAY,EAAnC;;AACA,QAAMe,cAAc,GAAEC,IAAD,IAAQ;AACzBA,IAAAA,IAAI,CAACC,UAAL,GAAkBhB,KAAK,EAAvB;AACAiB,IAAAA,UAAU;AACb,GAHD;;AAIA,QAAMC,eAAe,GAAEH,IAAD,IAAQ;AAC1BA,IAAAA,IAAI,CAACI,aAAL,GAAqBnB,KAAK,EAA1B;AACAiB,IAAAA,UAAU;AACb,GAHD;;AAIA,QAAMG,cAAc,GAAEL,IAAD,IAAQ;AACzBA,IAAAA,IAAI,CAACM,YAAL,GAAoBrB,KAAK,EAAzB;AACAiB,IAAAA,UAAU;AACb,GAHD;;AAIA,QAAMA,UAAU,GAAC,MAAI;AACjBZ,IAAAA,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoBE,MAAAA,MAAM,EAAC,KAA3B;AAAkCE,MAAAA,IAAI,EAACc,IAAI,CAACC,SAAL,CAAeR,IAAf;AAAvC,KAAD,CAAjB;AACAZ,IAAAA,MAAM,CAAC,0CAAD,CAAN;AACH,GAHD;;AAIAR,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACc,QAAQ,CAACe,IAAb,EAAkB;AACd,UAAGf,QAAQ,CAACgB,OAAZ,EACIC,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEJtB,MAAAA,iBAAiB,CACb;AACIE,QAAAA,OAAO,EAAE;AACL,oBAAU,mCADL;AAEL,0BAAgB;AAFX,SADb;AAKID,QAAAA,MAAM,EAAC,KALX;AAMIE,QAAAA,IAAI,EAAC;AANT,OADa,CAAjB;AAUAL,MAAAA,MAAM,CAAC,0CAAD,CAAN;AACH;AACJ,GAjBQ,EAiBP,CAACM,QAAD,CAjBO,CAAT;AAkBA,sBACI;AAAA,cACMA,QAAQ,iBACN,QAAC,0BAAD;AACI,MAAA,QAAQ,EAAEA,QAAQ,CAACe,IADvB;AAEI,MAAA,QAAQ,EAAEX,WAFd;AAGI,MAAA,cAAc,EAAEC,cAHpB;AAII,MAAA,eAAe,EAAEI,eAJrB;AAKI,MAAA,cAAc,EAAEE,cALpB;AAMI,MAAA,KAAK,EAAET,QANX;AAOI,MAAA,QAAQ,EAAEF,QAPd;AAQI,MAAA,OAAO,EAAEC,OARb;AASI,MAAA,OAAO,EAAEE;AATb;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAjEM;;GAAMX,S;UAYuCH,Q,EACzBC,Y;;;KAbdE,S","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport {Presentational as PresentationalHistoryBooks} from './presentational';\r\nimport { useFetch } from '../customHooks/requestAPI';\r\nimport { useAuthState } from '../context';\r\nimport { today } from '../utilities';\r\nexport const Container=()=>{\r\n    const [url, setUrl]=useState(\"http://localhost:3000/bookRequest/getAll\");\r\n    const [requestOptions, setRequestOptions]=useState(\r\n        { \r\n            method:\"GET\", \r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body:null\r\n        }\r\n    );\r\n    const [ response, loading, hasError, message] = useFetch(url, setUrl, requestOptions);\r\n    const { userDetails} = useAuthState();\r\n    const onClickApprove=(item)=>{\r\n        item.BORROWDATE = today();\r\n        sendUpdate();\r\n    };\r\n    const onClickDenegate=(item)=>{\r\n        item.DENEGATEDDATE = today();\r\n        sendUpdate();\r\n    };\r\n    const onClickDeliver=(item)=>{\r\n        item.DELIVERYDATE = today();\r\n        sendUpdate();\r\n    };\r\n    const sendUpdate=()=>{\r\n        setRequestOptions({...requestOptions, method:\"PUT\", body:JSON.stringify(item)});\r\n        setUrl(\"http://localhost:3000/bookRequest/update\");\r\n    };\r\n    useEffect(()=>{\r\n        if(!response.data){\r\n            if(response.success)\r\n                console.log(\"SOLICITUD ACTUALIZADA\");\r\n            \r\n            setRequestOptions(\r\n                { \r\n                    headers: {\r\n                        'Accept': 'application/json, text/plain, */*',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    method:\"GET\", \r\n                    body:null\r\n                }\r\n            );\r\n            setUrl(\"http://localhost:3000/bookRequest/getAll\");\r\n        }\r\n    },[response]);\r\n    return(\r\n        <div>\r\n            {(response &&\r\n                <PresentationalHistoryBooks \r\n                    requests={response.data} \r\n                    userAuth={userDetails}\r\n                    onClickApprove={onClickApprove}\r\n                    onClickDenegate={onClickDenegate}\r\n                    onClickDeliver={onClickDeliver}\r\n                    error={hasError}\r\n                    response={response}\r\n                    loading={loading}\r\n                    message={message}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}