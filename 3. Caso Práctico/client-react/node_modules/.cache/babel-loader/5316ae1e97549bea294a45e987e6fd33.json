{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport function useFetch(url, setUrl, opts) {\n  _s();\n\n  const [response, setResponse] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const doFetch = async () => {\n    try {\n      setHasError(false);\n      setLoading(true);\n      const response = await fetch(url, opts);\n      const data = await response.json();\n      console.log(\"fetch data\", data);\n      setResponse(data);\n      setLoading(false);\n      setUrl(\"\");\n    } catch (err) {\n      setLoading(false);\n      setHasError(true);\n      setResponse({});\n      setUrl(\"\");\n    }\n  };\n\n  useEffect(() => {\n    if (url === \"\") return;\n    doFetch();\n  }, [url]);\n  return [response, loading, hasError];\n}\n\n_s(useFetch, \"X5twO5ILbo1lHGU8UsIBEPrHNrY=\");","map":{"version":3,"sources":["C:/Proyectos/Challenges/intelligential/3. Caso PrÃ¡ctico/client-react/src/components/customHooks/requestAPI/index.js"],"names":["useEffect","useState","useFetch","url","setUrl","opts","response","setResponse","loading","setLoading","hasError","setHasError","doFetch","fetch","data","json","console","log","err"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqC;AAAA;;AACxC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMW,OAAO,GAAC,YAAS;AACnB,QAAG;AACCD,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMH,QAAQ,GAAG,MAAMO,KAAK,CAACV,GAAD,EAAME,IAAN,CAA5B;AACA,YAAMS,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,IAA1B;AACAP,MAAAA,WAAW,CAACO,IAAD,CAAX;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,MAAAA,MAAM,CAAC,EAAD,CAAN;AACH,KATD,CASC,OAAMc,GAAN,EAAU;AACPT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAJ,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAH,MAAAA,MAAM,CAAC,EAAD,CAAN;AACH;AACJ,GAhBD;;AAkBAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,GAAG,KAAG,EAAT,EACI;AACJS,IAAAA,OAAO;AACV,GAJQ,EAIN,CAACT,GAAD,CAJM,CAAT;AAKA,SAAO,CAAEG,QAAF,EAAYE,OAAZ,EAAqBE,QAArB,CAAP;AACH;;GA7BeR,Q","sourcesContent":["import {useEffect, useState} from \"react\";\r\nexport function useFetch(url, setUrl, opts) {\r\n    const [response, setResponse] = useState({})\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasError, setHasError] = useState(false)\r\n    \r\n    const doFetch=async()=>{\r\n        try{\r\n            setHasError(false);\r\n            setLoading(true);\r\n            const response = await fetch(url, opts);\r\n            const data = await response.json();\r\n            console.log(\"fetch data\", data);\r\n            setResponse(data);\r\n            setLoading(false);\r\n            setUrl(\"\");\r\n        }catch(err){\r\n            setLoading(false);\r\n            setHasError(true);\r\n            setResponse({});\r\n            setUrl(\"\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(url===\"\")\r\n            return;\r\n        doFetch();\r\n    }, [url])\r\n    return [ response, loading, hasError ]\r\n}"]},"metadata":{},"sourceType":"module"}