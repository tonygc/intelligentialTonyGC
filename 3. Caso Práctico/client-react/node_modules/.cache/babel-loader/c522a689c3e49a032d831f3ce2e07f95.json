{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\Challenges\\\\intelligential\\\\3. Caso Pr\\xE1ctico\\\\client-react\\\\src\\\\components\\\\mantenimientoLibro\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Presentational as UserFormulario } from './presentational';\nimport { useFetch } from '../customHooks/requestAPI';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Container = props => {\n  _s();\n\n  var _props$location$state;\n\n  const [dataBook, setDataBook] = useState({\n    title: props.location.state.title,\n    author: (_props$location$state = props.location.state.author) !== null && _props$location$state !== void 0 ? _props$location$state : \"\",\n    editorial: props.location.state.editorial,\n    pages: props.location.state.pages,\n    year: props.location.state.year,\n    id: props.location.state.id\n  });\n  const [url, setUrl] = useState(\"\");\n  const [requestOptions, setRequestOptions] = useState({\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(dataBook)\n  });\n  const [back, setBack] = useState(false);\n\n  const clearData = () => {\n    setDataBook({ ...dataBook,\n      title: \"\",\n      author: \"\",\n      pages: 0,\n      year: 0,\n      editorial: \"\"\n    });\n  };\n\n  const [response, loading, hasError] = useFetch(url, setUrl, requestOptions, clearData);\n\n  const SubmitForm = ev => {\n    //setting url to call api hook\n    if (!dataBook.id) {\n      setRequestOptions({ ...requestOptions,\n        method: \"POST\"\n      });\n      setUrl(\"http://localhost:3000/book/add\");\n      console.log(\"response\", response);\n\n      if (response.success) {\n        clearData();\n      }\n    } else {\n      setRequestOptions({ ...requestOptions,\n        method: \"PUT\"\n      });\n      setUrl(\"http://localhost:3000/book/update\");\n    }\n  };\n\n  const onChangeInput = ev => {\n    setDataBook({ ...dataBook,\n      [ev.target.id]: ev.target.value\n    });\n  };\n\n  const backList = () => {\n    setBack(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [back && back && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/libro/lista\",\n      push: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(UserFormulario, {\n      dataBook: dataBook,\n      setDataBook: setDataBook,\n      onChangeInput: onChangeInput,\n      submitForm: SubmitForm,\n      backList: backList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Container, \"WpweLH9okeyxFk3D3faBtl3qM9Y=\", false, function () {\n  return [useFetch];\n});\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["C:/Proyectos/Challenges/intelligential/3. Caso PrÃ¡ctico/client-react/src/components/mantenimientoLibro/index.js"],"names":["useState","Presentational","UserFormulario","useFetch","Redirect","Container","props","dataBook","setDataBook","title","location","state","author","editorial","pages","year","id","url","setUrl","requestOptions","setRequestOptions","method","headers","body","JSON","stringify","back","setBack","clearData","response","loading","hasError","SubmitForm","ev","console","log","success","onChangeInput","target","value","backList"],"mappings":"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","sourcesContent":["import { useState} from 'react';\r\nimport {Presentational as UserFormulario} from './presentational'\r\nimport { useFetch } from '../customHooks/requestAPI'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const Container=(props)=>{\r\n    const [dataBook, setDataBook]=useState({\r\n        title:props.location.state.title,\r\n        author:props.location.state.author??\"\",\r\n        editorial:props.location.state.editorial,\r\n        pages:props.location.state.pages,\r\n        year:props.location.state.year,\r\n        id:props.location.state.id\r\n    });\r\n    const [url, setUrl]=useState(\"\");\r\n    const [requestOptions, setRequestOptions]=useState(\r\n        { \r\n            method:\"POST\", \r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify(dataBook)\r\n        }\r\n    );\r\n    const [back, setBack]=useState(false);\r\n    const clearData=()=>{\r\n        setDataBook({...dataBook, title:\"\", author:\"\", pages:0, year:0, editorial:\"\"});\r\n    };\r\n    const [ response, loading, hasError] = useFetch(url,setUrl, \r\n        requestOptions, clearData);\r\n\r\n    const SubmitForm= (ev)=>{\r\n        //setting url to call api hook\r\n        if(!dataBook.id){\r\n            setRequestOptions({...requestOptions, method:\"POST\"});\r\n            setUrl(\"http://localhost:3000/book/add\");    \r\n            console.log(\"response\", response);\r\n            if(response.success){\r\n                clearData();\r\n            }\r\n        }else{\r\n            setRequestOptions({...requestOptions, method:\"PUT\"});\r\n            setUrl(\"http://localhost:3000/book/update\");\r\n        }\r\n        \r\n    };\r\n\r\n    const onChangeInput=(ev)=>{\r\n        setDataBook({...dataBook, [ev.target.id]: ev.target.value})\r\n    };\r\n    const backList=()=>{\r\n        setBack(true);\r\n    };\r\n    \r\n\r\n    return(\r\n        <div>\r\n        {((back) && \r\n            ((back) &&\r\n                <Redirect to=\"/libro/lista\" push={true} />\r\n                )\r\n            )}\r\n        <UserFormulario dataBook={dataBook} \r\n                        setDataBook={setDataBook} \r\n                        onChangeInput={onChangeInput} \r\n                        submitForm={SubmitForm}\r\n                        backList={backList}\r\n                        />\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}