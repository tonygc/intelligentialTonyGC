{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\Challenges\\\\intelligential\\\\3. Caso Pr\\xE1ctico\\\\client-react\\\\src\\\\components\\\\listaLibros\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Presentational as BrowseBooks } from './presentational';\nimport { useFetch } from '../customHooks/requestAPI';\nimport { useAuthState } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Container = () => {\n  _s();\n\n  // const [rows, setRows] = useState([\n  //     {title: \"Cáscara de nuez\", author: \"Ian McEwan\", editorial: \"Anagrama\", pages: 350, year:2000}\n  //     ,{title: \"Nosotros en la noche\", author: \"Kent Haruf\", editorial: \"Literatura Random House\", pages: 350, year:2000}\n  //     ,{title: \"Los milagros prohibidos\", author: \"Alexis Ravelo\", editorial: \"Siruela\",pages: 350, year:2000}\n  //     ,{title: \"Orthodoxia\", author: \"Ulises Bértolo\", editorial: \"Ediciones Carena\", pages: 350, year:2000}\n  //     ,{title: \"El cuento de la criada\", author: \"Margaret Atwood\", editorial: \"Salamandra\", pages: 350, year:2000}\n  // ]);\n  const [itemBook, setItemBook] = useState({});\n  const [url, setUrl] = useState(\"http://localhost:3000/book/getAll\");\n  const [addBook, setAddBook] = useState(false);\n  const {\n    userDetails\n  } = useAuthState();\n  const [requestOptions, setRequestOptions] = useState({\n    method: \"GET\",\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    }\n  });\n  const [response, loading, hasError] = useFetch(url, setUrl, requestOptions);\n\n  const clickAddBook = () => {\n    setAddBook(true);\n  };\n\n  const clickEditBook = item => {\n    //console.log(item);\n    setItemBook(item);\n    clickAddBook();\n  };\n\n  const clickRequestBook = item => {\n    let data = {\n      id_user: userDetails.id,\n      id_book: item.id\n    };\n    console.log(\"data book request\", data);\n    setRequestOptions({ ...requestOptions,\n      method: \"POST\",\n      body: JSON.stringify(data)\n    });\n    setUrl(\"http://localhost:3000/book/add\");\n  };\n\n  useEffect(() => {\n    if (!response.data) {\n      if (response.success) console.log(\"solicitud creada\");\n      setRequestOptions({\n        method: \"GET\",\n        body: null\n      });\n      setUrl(\"http://localhost:3000/book/getAll\");\n    }\n  }, [response]);\n\n  if (addBook) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/libro\",\n        state: itemBook\n      },\n      push: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Error al procesar la solicitud\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), response && /*#__PURE__*/_jsxDEV(BrowseBooks, {\n      userDetails: userDetails,\n      rows: response.data,\n      clickAddBook: clickAddBook,\n      clickEditBook: clickEditBook,\n      clickRequestBook: clickRequestBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Container, \"sV8pUHydWHH0hsP1FGJtNxxGcjU=\", false, function () {\n  return [useAuthState, useFetch];\n});\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["C:/Proyectos/Challenges/intelligential/3. Caso Práctico/client-react/src/components/listaLibros/index.js"],"names":["useEffect","useState","Redirect","Presentational","BrowseBooks","useFetch","useAuthState","Container","itemBook","setItemBook","url","setUrl","addBook","setAddBook","userDetails","requestOptions","setRequestOptions","method","headers","response","loading","hasError","clickAddBook","clickEditBook","item","clickRequestBook","data","id_user","id","id_book","console","log","body","JSON","stringify","success","pathname","state"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { Presentational as BrowseBooks } from './presentational'\r\nimport { useFetch } from '../customHooks/requestAPI';\r\nimport { useAuthState } from '../context';\r\nexport const Container=()=>{\r\n    // const [rows, setRows] = useState([\r\n    //     {title: \"Cáscara de nuez\", author: \"Ian McEwan\", editorial: \"Anagrama\", pages: 350, year:2000}\r\n    //     ,{title: \"Nosotros en la noche\", author: \"Kent Haruf\", editorial: \"Literatura Random House\", pages: 350, year:2000}\r\n    //     ,{title: \"Los milagros prohibidos\", author: \"Alexis Ravelo\", editorial: \"Siruela\",pages: 350, year:2000}\r\n    //     ,{title: \"Orthodoxia\", author: \"Ulises Bértolo\", editorial: \"Ediciones Carena\", pages: 350, year:2000}\r\n    //     ,{title: \"El cuento de la criada\", author: \"Margaret Atwood\", editorial: \"Salamandra\", pages: 350, year:2000}\r\n    // ]);\r\n    const [ itemBook, setItemBook ] = useState({});\r\n    const [url, setUrl]=useState(\"http://localhost:3000/book/getAll\");\r\n    const [addBook, setAddBook]=useState(false);\r\n    const { userDetails } = useAuthState();\r\n    const [requestOptions, setRequestOptions]=useState(\r\n        { \r\n            method:\"GET\", \r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    );\r\n    const [ response, loading, hasError] = useFetch(url, setUrl, requestOptions);\r\n    \r\n    const clickAddBook=()=>{\r\n        setAddBook(true);\r\n    };\r\n    const clickEditBook=(item)=>{\r\n        //console.log(item);\r\n        setItemBook(item);\r\n        clickAddBook();\r\n    }\r\n    const clickRequestBook=(item)=>{\r\n        let data={id_user:userDetails.id,id_book:item.id};\r\n        console.log(\"data book request\", data);\r\n        setRequestOptions(\r\n            { ...requestOptions,\r\n                method:\"POST\", \r\n                body:JSON.stringify(data)\r\n            }\r\n        );\r\n        setUrl(\"http://localhost:3000/book/add\");\r\n    };\r\n    useEffect(()=>{\r\n        if(!response.data){\r\n            if(response.success)\r\n                console.log(\"solicitud creada\");\r\n            \r\n                setRequestOptions(\r\n                { \r\n                    method:\"GET\", \r\n                    body:null\r\n                }\r\n            );\r\n            setUrl(\"http://localhost:3000/book/getAll\");\r\n        }\r\n    },[response]);\r\n    if (addBook) {\r\n        return <Redirect to={{\r\n            pathname:\"/libro\",\r\n            state: itemBook\r\n        }} push={true} />;\r\n    }\r\n    return(\r\n        <div>\r\n        {(loading && \r\n            <label>Cargando...</label>\r\n        )}\r\n        {(hasError && \r\n            <label>Error al procesar la solicitud</label>\r\n        )}\r\n        {(response &&\r\n            <BrowseBooks userDetails={userDetails} \r\n            rows={response.data} \r\n            clickAddBook={clickAddBook} \r\n            clickEditBook={clickEditBook}\r\n            clickRequestBook={clickRequestBook}\r\n            />\r\n        )}\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}