{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\n\nfunction useFetch(url, opts) {\n  _s();\n\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetch(url, opts).then(res => {\n      setResponse(res.data);\n      setLoading(false);\n    }).catch(() => {\n      setHasError(true);\n      setLoading(false);\n    });\n  }, [url]);\n  return [response, loading, hasError];\n}\n\n_s(useFetch, \"2P4JWcX0CkVNVRdIRDSsSZZFJRU=\");","map":{"version":3,"sources":["C:/Proyectos/Challenges/intelligential/3. Caso PrÃ¡ctico/client-react/src/components/customHooks/requestAPI/index.js"],"names":["useEffect","useFetch","url","opts","response","setResponse","useState","loading","setLoading","hasError","setHasError","fetch","then","res","data","catch"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;;AACA,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,IAAvB,EAA6B;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,KAAK,CAACT,GAAD,EAAMC,IAAN,CAAL,CACKS,IADL,CACWC,GAAD,IAAS;AACfR,MAAAA,WAAW,CAACQ,GAAG,CAACC,IAAL,CAAX;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJD,EAKKO,KALL,CAKW,MAAM;AACTL,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KARL;AASH,GAXQ,EAWN,CAAEN,GAAF,CAXM,CAAT;AAYA,SAAO,CAAEE,QAAF,EAAYG,OAAZ,EAAqBE,QAArB,CAAP;AACH;;GAjBQR,Q","sourcesContent":["import {useEffect} from \"react\";\r\nfunction useFetch(url, opts) {\r\n    const [response, setResponse] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasError, setHasError] = useState(false)\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        fetch(url, opts)\r\n            .then((res) => {\r\n            setResponse(res.data)\r\n            setLoading(false)\r\n        })\r\n            .catch(() => {\r\n                setHasError(true)\r\n                setLoading(false)\r\n            })\r\n    }, [ url ])\r\n    return [ response, loading, hasError ]\r\n}"]},"metadata":{},"sourceType":"module"}