{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos\\\\Challenges\\\\intelligential\\\\3. Caso Pr\\xE1ctico\\\\client-react\\\\src\\\\components\\\\login\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { Presentational as FormLogin } from './presentational';\nimport { useState } from 'react';\nimport { useAuthDispatch, useAuthState, LoginUser } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Container(props) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useAuthDispatch();\n  const {\n    loading,\n    errorMessage\n  } = useAuthState(); //read the values of loading and errorMessage from context\n\n  console.log(\"dispatch\", dispatch);\n  console.log(\"dispatch\", dispatch);\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      let response = await LoginUser(dispatch, {\n        email,\n        password\n      });\n      if (!response.user) return;\n      props.history.push('/dashboard');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormLogin, {\n    email: email,\n    password: password,\n    setEmail: setEmail,\n    setPassword: setPassword,\n    handleLogin: handleLogin,\n    loading: loading,\n    errorMessage: errorMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Container, \"2HjGGFNYD84jh4Fl3fT9ywG7TJY=\", false, function () {\n  return [useAuthDispatch, useAuthState];\n});\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["C:/Proyectos/Challenges/intelligential/3. Caso PrÃ¡ctico/client-react/src/components/login/index.js"],"names":["Presentational","FormLogin","useState","useAuthDispatch","useAuthState","LoginUser","Container","props","email","setEmail","password","setPassword","dispatch","loading","errorMessage","console","log","handleLogin","e","preventDefault","response","user","history","push","error"],"mappings":";;;AAAA,SAASA,cAAc,IAAIC,SAA3B,QAA4C,kBAA5C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,SAAxC,QAAyD,YAAzD;;AACA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMU,QAAQ,GAAGT,eAAe,EAAhC;AACA,QAAM;AAAEU,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA4BV,YAAY,EAA9C,CAL6B,CAKoB;;AACjDW,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAxB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAxB;;AAEA,QAAMK,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC7BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI;AACA,UAAIC,QAAQ,GAAG,MAAMf,SAAS,CAACO,QAAD,EAAW;AAAEJ,QAAAA,KAAF;AAASE,QAAAA;AAAT,OAAX,CAA9B;AACA,UAAI,CAACU,QAAQ,CAACC,IAAd,EAAoB;AACpBd,MAAAA,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACH,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH;AACJ,GAVD;;AAYA,sBACI,QAAC,SAAD;AACA,IAAA,KAAK,EAAEhB,KADP;AAEA,IAAA,QAAQ,EAAEE,QAFV;AAGA,IAAA,QAAQ,EAAED,QAHV;AAIA,IAAA,WAAW,EAAEE,WAJb;AAKA,IAAA,WAAW,EAAEM,WALb;AAMA,IAAA,OAAO,EAAEJ,OANT;AAOA,IAAA,YAAY,EAAEC;AAPd;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAhCeR,S;UAIKH,e,EACiBC,Y;;;KALtBE,S","sourcesContent":["import { Presentational as FormLogin } from './presentational';\r\nimport { useState } from 'react';\r\nimport { useAuthDispatch, useAuthState, LoginUser } from '../context'\r\nexport function Container(props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n \r\n    const dispatch = useAuthDispatch()\r\n    const { loading, errorMessage } = useAuthState() //read the values of loading and errorMessage from context\r\n    console.log(\"dispatch\", dispatch);\r\n    console.log(\"dispatch\", dispatch);\r\n \r\n    const handleLogin = async (e) => {\r\n        e.preventDefault()\r\n \r\n        try {\r\n            let response = await LoginUser(dispatch, { email, password })\r\n            if (!response.user) return\r\n            props.history.push('/dashboard')\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormLogin \r\n        email={email} \r\n        password={password}\r\n        setEmail={setEmail}\r\n        setPassword={setPassword}\r\n        handleLogin={handleLogin}\r\n        loading={loading}\r\n        errorMessage={errorMessage}\r\n        />\r\n    )\r\n}\r\n "]},"metadata":{},"sourceType":"module"}