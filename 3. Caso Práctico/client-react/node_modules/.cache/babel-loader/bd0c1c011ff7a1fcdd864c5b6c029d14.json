{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport function useFetch(url, setUrl, opts, clearData) {\n  _s();\n\n  const [response, setResponse] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const doFetch = async () => {\n    try {\n      setHasError(false);\n      setLoading(true);\n      const response = await fetch(url, opts);\n      console.log(\"response\", response);\n      const data = await response.json();\n      console.log(\"data\", data);\n      setResponse(data);\n      setLoading(false);\n      setUrl(\"\");\n\n      if (data.success && clearData !== undefined) {\n        clearData();\n      }\n    } catch (err) {\n      setLoading(false);\n      setHasError(true);\n      setResponse({});\n      setUrl(\"\");\n    }\n  };\n\n  useEffect(() => {\n    if (url === \"\") return;\n    doFetch();\n  }, [url]);\n  return [response, loading, hasError];\n}\n\n_s(useFetch, \"X5twO5ILbo1lHGU8UsIBEPrHNrY=\");","map":{"version":3,"sources":["C:/Proyectos/Challenges/intelligential/3. Caso PrÃ¡ctico/client-react/src/components/customHooks/requestAPI/index.js"],"names":["useEffect","useState","useFetch","url","setUrl","opts","clearData","response","setResponse","loading","setLoading","hasError","setHasError","doFetch","fetch","console","log","data","json","success","undefined","err"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,SAArC,EAAgD;AAAA;;AACnD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMY,OAAO,GAAC,YAAS;AACnB,QAAG;AACCD,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMH,QAAQ,GAAG,MAAMO,KAAK,CAACX,GAAD,EAAME,IAAN,CAA5B;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBT,QAAxB;AACA,YAAMU,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,IAApB;AACAT,MAAAA,WAAW,CAACS,IAAD,CAAX;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,MAAAA,MAAM,CAAC,EAAD,CAAN;;AACA,UAAGa,IAAI,CAACE,OAAL,IAAgBb,SAAS,KAAGc,SAA/B,EAAyC;AACrCd,QAAAA,SAAS;AACZ;AACJ,KAbD,CAaC,OAAMe,GAAN,EAAU;AACPX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAJ,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAJ,MAAAA,MAAM,CAAC,EAAD,CAAN;AACH;AACJ,GApBD;;AAsBAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,GAAG,KAAG,EAAT,EACI;AACJU,IAAAA,OAAO;AACV,GAJQ,EAIN,CAACV,GAAD,CAJM,CAAT;AAKA,SAAO,CAAEI,QAAF,EAAYE,OAAZ,EAAqBE,QAArB,CAAP;AACH;;GAjCeT,Q","sourcesContent":["import {useEffect, useState} from \"react\";\r\nexport function useFetch(url, setUrl, opts, clearData) {\r\n    const [response, setResponse] = useState({})\r\n    const [loading, setLoading] = useState(false)\r\n    const [hasError, setHasError] = useState(false)\r\n    \r\n    const doFetch=async()=>{\r\n        try{\r\n            setHasError(false);\r\n            setLoading(true);\r\n            const response = await fetch(url, opts);\r\n            console.log(\"response\", response);\r\n            const data = await response.json();\r\n            console.log(\"data\", data);\r\n            setResponse(data);\r\n            setLoading(false);\r\n            setUrl(\"\");\r\n            if(data.success && clearData!==undefined){\r\n                clearData();\r\n            }\r\n        }catch(err){\r\n            setLoading(false);\r\n            setHasError(true);\r\n            setResponse({});\r\n            setUrl(\"\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(url===\"\")\r\n            return;\r\n        doFetch();\r\n    }, [url])\r\n    return [ response, loading, hasError ]\r\n}"]},"metadata":{},"sourceType":"module"}